/*
 * Module for editing password
 *
 */ 

var dbAccess = require('dbAccess');
var qs = require('querystring');
var crypto = require('crypto');
var url = require('url');

var view = 'views/editPassword.html';

var EditPassword = exports.EditPassword = function() { 
};
/*
 * 
 */
EditPassword.buildEditPassword = function(request, response) 
{
	var urlInfo = url.parse(request.url, true);
	var message = urlInfo.query['message'];
	request.getUser(function(error, user){	
		if (error){
			// If a database error is generated, just spit out failure message
			console.log('Error occured reading user profile from DataBase:' + error.toString());
			console.log(sqlUpdateUserProfile);
			response.render(view, {error: 'Error occured during database access'});
			return;
		}else if (user){
			values = {};
			values.userid = user.id;
			values.message=message;
			response.render(view, values);
		}
	});
}

/*
 * Save updated password to the database
 */
EditPassword.handleEditPassword = function(request, response) 
{
	// The form data from the request is first read into newPasswordString
	var newPasswordString = '';	
	
	request.on('data', function(chunk){
		newPasswordString += chunk.toString();
	});
	
	request.on('end', function(){
				// parse the update profile information
		var updateInfo = qs.parse(newPasswordString);
		var oldpassword = updateInfo['password'];
		var newpassword = updateInfo['new_password'];
		var confirmpassword = updateInfo['confirm_password'];
		var userid = updateInfo['userid'];
		var newCryptoPassword = crypto.createHash('md5').update(newpassword).digest("hex");
		var confirmCryptoPassword = crypto.createHash('md5').update(confirmpassword).digest("hex");
		var oldCryptoPassword = crypto.createHash('md5').update(oldpassword).digest("hex");
		
		// Verify old password
		var sqlUpdateUserProfile = "SELECT * FROM users WHERE id='" + userid +"';";
		dbAccess.runQuery(sqlUpdateUserProfile, function(error, rows){
			if(error) {
				response.render(view, {error: 'Error occured during saving password to database'});
			}
			else {
				console.log('user id:'+userid);
				var dbpassword = rows[0]['password'];
				if (oldCryptoPassword != dbpassword){//incorrect old password
					//response.render(view, {error: 'Incorrect password entered. Please try again.'});
					response.redirectTo('/editPassword?message=Incorrect Password');
				}else if(confirmCryptoPassword != newCryptoPassword || newpassword =="" || confirmpassword==""){// check that new password match confirmed password and empty new password
					//response.render(view, {error: 'Confirm password incorrect. Please try again.'});
					response.redirectTo('/editPassword?message=Confirm Password Incorrect');
				}else{
				//all correct
					console.log("update password");
					var sqlUpdateUserProfile = "UPDATE users SET " 
							+ "password='" + newCryptoPassword
							+ "' "
							+ "WHERE id='" + userid
							+ "' AND password='" + oldCryptoPassword
							+ "';"; 
					dbAccess.runQuery(sqlUpdateUserProfile, function(error, rows){
						if(error){
							response.render(view, {error: 'Error updated password.'});
						}else{
							console.log('database save successful!');
							//response.render(view, {message: 'Password updated'});
							response.redirectTo('/editPassword?message=Update Successful');
						}
					});
				}
			}
		});
	});
	
}
